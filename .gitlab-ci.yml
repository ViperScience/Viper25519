stages:
  - build-debug
  - coverage-report
  - build-release
  - pages

docker-build:
  image: docker:latest
  stage: build-debug
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

coverage:
  image: "$CI_REGISTRY_IMAGE"
  stage: coverage-report
  script:
    - cd /opt
    - curl -Os https://uploader.codecov.io/latest/linux/codecov
    - chmod +x codecov
    - ./codecov

release-build:
  image: "$CI_REGISTRY_IMAGE"
  stage: build-release
  script:
    - cd /opt
    - cmake -S . -B cmake-build-release/ -D CMAKE_BUILD_TYPE=Release -D RUN_ALL_TESTS=ON
    - cmake --build cmake-build-release/ --parallel 8
    - ctest --test-dir cmake-build-release/ --output-on-failure -T Test

pages:
  image: python:3.11-bookworm
  script:
  - pip install poxy
  - apt install doxygen
  - poxy docs/poxy.toml
  - mv html/ public/
  artifacts:
    paths:
    - public
